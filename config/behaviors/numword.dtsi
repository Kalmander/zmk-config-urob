/ {
	behaviors {

		numword_autolayer: numword_autolayer {
			compatible = "zmk,behavior-auto-layer";
			#binding-cells = <1>;
			continue-list = <BACKSPACE DELETE DOT COMMA PLUS MINUS STAR FSLH EQUAL CLEAR_AGAIN G>;
			ignore-numbers;
      ignore-modifiers;
		};

		numwordplus_autolayer: numwordplus_autolayer {
			compatible = "zmk,behavior-auto-layer";
			#binding-cells = <1>;
			continue-list = <SPACE UNDER LEFT RIGHT UP DOWN BACKSPACE DELETE DOT COMMA PLUS MINUS STAR FSLH EQUAL CLEAR_AGAIN G>;
			ignore-numbers;
      ignore-modifiers;
		};

		/* numword_with_overlay: numword_with_overlay { */
		/* 	compatible = "zmk,behavior-macro"; */
		/* 	#binding-cells = <0>; */
		/* 	bindings = < */
		/* 	&numword_autolayer NUM_WORD */
		/* 	&numword_autolayer KCAN_OVER */
		/* 	>; */
		/* }; */
		
		#define numword numword_autolayer NUM_WORD
    #define nsk to_then_sk NUM_WORD_MODDED
		#define numword_plus numwordplus_autolayer NUM_WORD_PLUS
		

		fsl_num: force_sl_num {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp K_CANCEL>, <&sl NUM_WORD>;
		};

		fnumword: force_numword {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp K_CANCEL>, <&numword>;
		};

		fnumwordparam: force_numword_param {
			compatible = "zmk,behavior-macro-one-param";
			#binding-cells = <1>;
			bindings = <&kp K_CANCEL>, <&macro_param_1to1>, <&numword_autolayer MACRO_PLACEHOLDER>;
		};

		/* fnumwordp: force_numword_plus { */
		/* 	compatible = "zmk,behavior-macro"; */
		/* 	#binding-cells = <0>; */
		/* 	bindings = <&kp K_CANCEL>, <&numword_plus>; */
		/* }; */

		fnumwordp: force_numword_plus {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp K_CANCEL>, <&to NUM_WORD_PLUS>;
		};

		numword_or_c: numword_or_c {
			compatible = "zmk,behavior-mod-morph";
			#binding-cells = <0>;
			bindings = <&fnumwordp>, <&kp LS(C)>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};

	};
};
