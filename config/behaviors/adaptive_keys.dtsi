/ {
	behaviors {

		adaptive: adaptive {
			compatible = "zmk,behavior-adaptive-key";
			#binding-cells = <0>;
			bindings = <&kp SPACE>;

			ak_iy { trigger-keys = <I>; max-prior-idle-ms = <2000>; bindings = <&kp Y>; };
			ak_yi { trigger-keys = <Y>; max-prior-idle-ms = <2000>; bindings = <&kp I>; };
			ak_eo { trigger-keys = <E>; max-prior-idle-ms = <2000>; bindings = <&kp O>; };
			ak_oe { trigger-keys = <O>; max-prior-idle-ms = <2000>; bindings = <&kp E>; };
			ak_au { trigger-keys = <A>; max-prior-idle-ms = <2000>; bindings = <&kp U>; };
			ak_ua { trigger-keys = <U>; max-prior-idle-ms = <2000>; bindings = <&kp A>; };
			ak_zz   { trigger-keys = <Z>; max-prior-idle-ms = <2000>; bindings = <&kp Z>; };
			ak_vae  { trigger-keys = <V>; max-prior-idle-ms = <2000>; bindings = <&kp RA(Z)>; };
				
			/* ak_fr { trigger-keys = <F>; max-prior-idle-ms = <2000>; bindings = <&kp R>; }; */
			/* ak_wr { trigger-keys = <W>; max-prior-idle-ms = <2000>; bindings = <&kp R>; }; */
			/* ak_pk { trigger-keys = <P>; max-prior-idle-ms = <2000>; bindings = <&kp K>; }; */
			ak_mk { trigger-keys = <M>; max-prior-idle-ms = <2000>; bindings = <&kp K>; };
			/* ak_kp { trigger-keys = <K>; max-prior-idle-ms = <2000>; bindings = <&kp P>; }; */
			/* ak_kj { trigger-keys = <K>; max-prior-idle-ms = <2000>; bindings = <&kp J>; }; */
			ak_nl { trigger-keys = <N>; max-prior-idle-ms = <2000>; bindings = <&kp L>; };
			ak_lj { trigger-keys = <L>; max-prior-idle-ms = <2000>; bindings = <&kp J>; };
			ak_dg { trigger-keys = <D>; max-prior-idle-ms = <2000>; bindings = <&kp G>; };
			/* ak_gl { trigger-keys = <G>; max-prior-idle-ms = <2000>; bindings = <&kp L>; }; */
			ak_gd { trigger-keys = <G>; max-prior-idle-ms = <1000>; bindings = <&kp D>; };
			/* ak_gv { trigger-keys = <G>; max-prior-idle-ms = <2000>; bindings = <&kp V>; }; */
			/* ak_lg { trigger-keys = <L>; max-prior-idle-ms = <2000>; bindings = <&kp G>; }; */
			ak_td { trigger-keys = <T>; max-prior-idle-ms = <2000>; bindings = <&kp D>; };
			ak_bl { trigger-keys = <B>; max-prior-idle-ms = <2000>; bindings = <&kp L>; };
			ak_ratj { trigger-keys = <RA(T)>; max-prior-idle-ms = <2000>; bindings = <&kp J>; };

			/* ak_rs { trigger-keys = <R>; max-prior-idle-ms = <2000>; bindings = <&kp S>; }; */
			/* ak_rk { trigger-keys = <R>; max-prior-idle-ms = <2000>; bindings = <&kp K>; }; */
			ak_kr { trigger-keys = <K>; max-prior-idle-ms = <2000>; bindings = <&kp R>; };
			ak_sr { trigger-keys = <S>; max-prior-idle-ms = <2000>; bindings = <&kp R>; };
     
			ak_spacec { trigger-keys = <SPACE>; max-prior-idle-ms = <2000>; bindings = <&kp C>; };
		};


		num_adaptive: num_adaptive {
			compatible = "zmk,behavior-adaptive-key";
			#binding-cells = <0>;
			bindings = <&kp N1>;

			ak_31 { trigger-keys = <N3>; max-prior-idle-ms = <2000>; bindings = <&kp N1>; };
			ak_13 { trigger-keys = <N1>; max-prior-idle-ms = <2000>; bindings = <&kp N3>; };

			ak_80 { trigger-keys = <N8>; max-prior-idle-ms = <2000>; bindings = <&kp N0>; };
			ak_60 { trigger-keys = <N6>; max-prior-idle-ms = <2000>; bindings = <&kp N0>; };
			ak_70 { trigger-keys = <N7>; max-prior-idle-ms = <2000>; bindings = <&kp N0>; };
			ak_90 { trigger-keys = <N9>; max-prior-idle-ms = <2000>; bindings = <&kp N0>; };
			ak_08 { trigger-keys = <N0>; max-prior-idle-ms = <2000>; bindings = <&kp N8>; };
		};

		thorn_eth: thorn_eth {
			compatible = "zmk,behavior-adaptive-key";
			#binding-cells = <0>;
			bindings = <&kp RA(D)>;

			ak_thorn_eth1 { trigger-keys = <SPACE>; bindings = <&kp RA(T)>; };
			ak_thorn_eth2 { trigger-keys = <LSHIFT>; bindings = <&kp RA(T)>; };
			ak_thorn_eth3 { trigger-keys = <RSHIFT>; bindings = <&kp RA(T)>; };
		};

		n1_adapt: n1_adapt {
			compatible = "zmk,behavior-adaptive-key";
			#binding-cells = <0>;
			bindings = <&kp N1>;

			ak_13 { trigger-keys = <N1>; max-prior-idle-ms = <2000>; bindings = <&kp N3>; };
		};

		n0_adapt: n0_adapt {
			compatible = "zmk,behavior-adaptive-key";
			#binding-cells = <0>;
			bindings = <&kp N0>;

			ak_08 { trigger-keys = <N0>; max-prior-idle-ms = <2000>; bindings = <&kp N8>; };
		};

		lh_repeat: lh_repeat {
			compatible = "zmk,behavior-adaptive-key";
			#binding-cells = <0>;
			bindings = <&key_repeat>;
			ak_gd { trigger-keys = <G>; max-prior-idle-ms = <2000>; bindings = <&kp D>; };
			ak_bl { trigger-keys = <B>; max-prior-idle-ms = <2000>; bindings = <&kp L>; };
		};


		rh_repeat: rh_repeat {
			compatible = "zmk,behavior-adaptive-key";
			#binding-cells = <0>;
			bindings = <&key_repeat>;
			/* ak_lj { trigger-keys = <L>; max-prior-idle-ms = <2000>; bindings = <&kp J>; }; */
			ak_eq { trigger-keys = <E>; max-prior-idle-ms = <2000>; bindings = <&kp Q>; };
		};

		atd: a_thorn_eth {
			compatible = "zmk,behavior-adaptive-key";
			#binding-cells = <0>;
			bindings = <&kp RA(T)>;

			ak_razrad { trigger-keys = <RA(Z)>; max-prior-idle-ms = <2000>; bindings = <&kp RA(D)>; };
		};

		adaptive_up: adaptive_up {
			compatible = "zmk,behavior-adaptive-key";
			#binding-cells = <0>;
			bindings = <&kp UP>;

			/* ak_gl { trigger-keys = <G>; max-prior-idle-ms = <1000>; bindings = <&kp D>; }; */
			ak_gv { trigger-keys = <G>; max-prior-idle-ms = <1000>; bindings = <&kp V>; };
		};

		adaptive_down: adaptive_down {
			compatible = "zmk,behavior-adaptive-key";
			#binding-cells = <0>;
			bindings = <&kp DOWN>;

			ak_gv { trigger-keys = <G>; max-prior-idle-ms = <1000>; bindings = <&kp V>; };
		};

		shift_assist: shift_assist {
			compatible = "zmk,behavior-adaptive-key";
			#binding-cells = <0>;
			bindings = <&sk LSHFT>;

			ak_iy { trigger-keys = <I>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp Y>; };
			ak_yi { trigger-keys = <Y>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp I>; };
			ak_eo { trigger-keys = <E>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp O>; };
			ak_oe { trigger-keys = <O>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp E>; };
			ak_au { trigger-keys = <A>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp U>; };
			ak_ua { trigger-keys = <U>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp A>; };
			ak_zz   { trigger-keys = <Z>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp Z>; };
			ak_vae  { trigger-keys = <V>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp RA(Z)>; };
				
			ak_fr { trigger-keys = <F>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp R>; };
			ak_wr { trigger-keys = <W>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp R>; };
			ak_pr { trigger-keys = <P>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp R>; };
			ak_nl { trigger-keys = <N>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp L>; };
			ak_dg { trigger-keys = <D>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp G>; };
			ak_gl { trigger-keys = <G>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp L>; };
			ak_lg { trigger-keys = <L>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp G>; };
			ak_td { trigger-keys = <T>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp D>; };

			ak_rs { trigger-keys = <R>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp S>; };
			ak_sr { trigger-keys = <S>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp R>; };
     
			ak_spacec { trigger-keys = <SPACE>; max-prior-idle-ms = <350>; strict-modifiers; bindings = <&kp C>; };

			space {
				trigger-keys = <C B N5>;
				bindings = <&kp SPACE>;
				max-prior-idle-ms = <350>;
				strict-modifiers;
			};
		};

		shift_repeat: shift_repeat {
			compatible = "zmk,behavior-adaptive-key";
			#binding-cells = <0>;
			bindings = <&sk LSHFT>;
			repeat {
				trigger-keys = <B D G J K L N P R S T X Z>;
				bindings = <&key_repeat>;
				max-prior-idle-ms = <600>;
				strict-modifiers;
			};
		};


		rshift_repeat: rshift_repeat {
			compatible = "zmk,behavior-adaptive-key";
			#binding-cells = <0>;
			bindings = <&sk RSHFT>;
			repeat {
				trigger-keys = <B D G J K L N P R S T X Z>;
				bindings = <&key_repeat>;
				max-prior-idle-ms = <600>;
				strict-modifiers;
			};
		};

		dot_shift: dot_shift {
			compatible = "zmk,behavior-adaptive-key";
			#binding-cells = <0>;
			bindings = <&sk LSHIFT>;
			repeat {
				trigger-keys = <A B C D E F G H I J K L M N O P Q R S T U V W X Y Z>;
				bindings = <&kp DOT>;
				max-prior-idle-ms = <600>;
				strict-modifiers;
			};
		};

        };
};
